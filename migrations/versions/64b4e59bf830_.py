"""empty message

Revision ID: 64b4e59bf830
Revises: 60273d7c4963
Create Date: 2025-09-16 01:10:26.245015

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '64b4e59bf830'
down_revision: Union[str, Sequence[str], None] = '60273d7c4963'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_notifications_application_id'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_created_at'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_id'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_is_read'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_job_id'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_type'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_user_id'), table_name='notifications')
    op.drop_table('notifications')
    op.alter_column('applications', 'status',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=25),
               existing_nullable=False)
    op.add_column('companies', sa.Column('logo_url', sa.String(length=500), nullable=True))
    op.add_column('companies', sa.Column('founded_year', sa.Integer(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('companies', 'founded_year')
    op.drop_column('companies', 'logo_url')
    op.alter_column('applications', 'status',
               existing_type=sa.String(length=25),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
    op.create_table('notifications',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('type', postgresql.ENUM('APPLICATION_UPDATE', 'JOB_MATCH', 'MESSAGE', 'SYSTEM', 'PROMOTION', name='notificationtype'), autoincrement=False, nullable=False),
    sa.Column('is_read', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('job_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('application_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('read_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['application_id'], ['applications.id'], name=op.f('notifications_application_id_fkey')),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], name=op.f('notifications_job_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('notifications_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('notifications_pkey'))
    )
    op.create_index(op.f('ix_notifications_user_id'), 'notifications', ['user_id'], unique=False)
    op.create_index(op.f('ix_notifications_type'), 'notifications', ['type'], unique=False)
    op.create_index(op.f('ix_notifications_job_id'), 'notifications', ['job_id'], unique=False)
    op.create_index(op.f('ix_notifications_is_read'), 'notifications', ['is_read'], unique=False)
    op.create_index(op.f('ix_notifications_id'), 'notifications', ['id'], unique=False)
    op.create_index(op.f('ix_notifications_created_at'), 'notifications', ['created_at'], unique=False)
    op.create_index(op.f('ix_notifications_application_id'), 'notifications', ['application_id'], unique=False)
    # ### end Alembic commands ###
